@page "/"
@using Usul.Providers
@using Usul.Providers.SerialPort
@inject IProviderManager ProviderManager

<h1>Usul</h1>
    
<div>
Port: @_portName
Info: @_info
</div>

<button @onclick="Scan" >Scan</button>

@code {
    private ISerialPortProvider _serialPortProvider;

    private string _portName;
    private string _info;

    protected override async Task OnInitializedAsync()
    {
        _serialPortProvider = ProviderManager.GetProvider<ISerialPortProvider>();
        await Scan();
    }


    private async Task Scan()
    {
        var ports = await _serialPortProvider.GetPortNamesAsync();
        foreach (var portName in ports)
        {
            using var serialPort = await _serialPortProvider.OpenAsync(new SerialPortConfiguration(portName));
            var result = GetInfo(serialPort);
            if (string.IsNullOrEmpty(result))
            {
                continue;
            }

            _portName = portName;
            _info = result;
            break;
        }
    }

    private static string GetInfo(ISerialPort serialPort)
    {
        serialPort.WriteLine("M115");
        Thread.Sleep(2000);
        return serialPort.ReadExisting();
    }

}